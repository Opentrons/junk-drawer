name: Continuous integration

on: [push]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9.0-rc - 3.9.0']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install poetry && poetry install
      - name: Run tests
        run: poetry run pytest

  check:
    name: Lint and type checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: pip install poetry && poetry install
      - name: Format checks
        run: poetry run black --check .
      - name: Lint checks
        run: poetry run flake8
      - name: Type checks
        run: poetry run mypy

  build:
    name: Build assets and deploy on tags
    runs-on: ubuntu-latest
    needs: [test, check]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7'
      - name: Install dependencies
        run: pip install poetry
      - name: Build artifacts
        run: poetry build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: junk-drawer
          path: dist
      - if: startsWith(github.ref, 'refs/tags/v')
        name: Deploy to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
        run: |
          poetry config repositories.testpypi https://test.pypi.org/legacy/
          poetry config pypi-token.testpypi $PYPI_TOKEN
          poetry publish --repository testpypi
